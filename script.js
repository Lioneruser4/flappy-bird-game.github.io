
// Oyun deƒüi≈ükenleri
let cards = [];
let lockBoard = false;
let firstCard, secondCard;
let moves = 0;
let matchedPairs = 0;
let level = 1;
let totalPairs = 8; // ƒ∞lk seviye i√ßin 8 √ßift

// Emoji setleri
const emojiSets = [
    ['üê∂', 'üê±', 'ü¶ä', 'üêª', 'ü¶Å', 'üêØ', 'ü¶Ñ', 'üêÆ', 'üê∑', 'üêµ'],
    ['ü¶â', 'üê∏', 'üêß', 'üê®', 'üêº', 'ü¶ò', 'üê¨', 'üê†', 'ü¶Ä', 'üêô'],
    ['üçé', 'üçå', 'üçí', 'üçì', 'üçä', 'üçã', 'üçâ', 'üçá', 'üçç', 'ü•ù']
];

// Seviyeye g√∂re emojileri al
function getEmojisForLevel(level) {
    // Her seviyede daha √ßok emoji kullan
    const startIndex = (level - 1) * 4;
    const endIndex = 6 + (level - 1) * 2; // Her seviyede 2 yeni emoji ekle
    return [...emojiSets[level - 1]].slice(0, endIndex);
}

// Sayfa y√ºklendiƒüinde oyunu ba≈ülat
document.addEventListener('DOMContentLoaded', function() {
    // Telegram Web App obyektini alƒ±rƒ±q
    const tg = window.Telegram.WebApp;

    // Elementleri se√ßiyoruz
    const userInfoDiv = document.getElementById('user-info');
    const gameAreaDiv = document.getElementById('game-area');
    const errorAreaDiv = document.getElementById('error-area');
    const memoryBoard = document.getElementById('memory-board');
    const restartButton = document.getElementById('restart-button');
    const movesDisplay = document.getElementById('moves');
    const matchedDisplay = document.getElementById('matched');
    const levelDisplay = document.getElementById('level-display');
    const totalPairsDisplay = document.getElementById('total-pairs');
    
    // Oyun deƒüi≈ükenleri
    let hasFlippedCard = false;

    // Oyunu ba≈ülat
    function initGame() {
        console.log('Oyun ba≈ülatƒ±lƒ±yor, seviye:', level);
        // Oyun taxtasƒ±nƒ± t…ômizl…ô
        memoryBoard.innerHTML = '';
        moves = 0;
        matchedPairs = 0;
        movesDisplay.textContent = moves;
        
        // S…ôviyy…ôy…ô g√∂r…ô c√ºtl…ôrin sayƒ±nƒ± t…ôyin et
        totalPairs = 8 + (level - 1) * 2; // 2-ci s…ôviyy…ôd…ô 10 c√ºt, 3-c√º s…ôviyy…ôd…ô 12 c√ºt
        if (level > 3) totalPairs = 12; // 3-c√º s…ôviyy…ôd…ôn sonra sabit 12 c√ºt
        
        matchedDisplay.textContent = `${matchedPairs}/${totalPairs}`;
        document.getElementById('level-display').textContent = `S…ôviyy…ô: ${level}`;
        
        cards = [];
        lockBoard = false;
        hasFlippedCard = false;
        
        // Cari s…ôviyy…ô √º√ß√ºn emojil…ôri al
        const currentEmojis = getEmojisForLevel(level);
        const gameEmojis = currentEmojis.slice(0, totalPairs);
        const gameCards = [...gameEmojis, ...gameEmojis];
        
        // Kartlarƒ± qarƒ±≈üdƒ±r
        gameCards.sort(() => Math.random() - 0.5);
        
        // Kartlarƒ± yarat
        gameCards.forEach((emoji, index) => {
            const card = document.createElement('div');
            card.classList.add('card');
            card.dataset.emoji = emoji;
            card.dataset.index = index;
            
            // Kartƒ±n √∂n v…ô arxa √ºzl…ôrini yarat
            card.innerHTML = `
                <div class="front"></div>
                <div class="back">${emoji}</div>
            `;
            card.addEventListener('click', flipCard);
            memoryBoard.appendChild(card);
            cards.push(card);
        });
    }
    
    // Oyunu ba≈ülat
    initGame();
    
    // Yeniden ba≈ülat butonuna tƒ±klama olayƒ±
    if (restartButton) {
        restartButton.addEventListener('click', initGame);
    }

    // Kart √ßevirme i≈ülemi…ôliyyatƒ±
    function flipCard() {
        if (lockBoard) return;
        if (this === firstCard) return;
        if (this.classList.contains('matched')) return;

        this.classList.add('flipped');

        if (!hasFlippedCard) {
            // ƒ∞lk kartƒ± √ßevir
            hasFlippedCard = true;
            firstCard = this;
            return;
        }

        // ƒ∞kinci kartƒ± √ßevir
        secondCard = this;
        moves++;
        movesDisplay.textContent = moves;
        checkForMatch();
    }

    // Reklam g√∂st…ôr
    function showAd() {
        const adContainer = document.getElementById('ad-container');
        const adContent = document.getElementById('ad-content');
        
        // Reklam iframe-i yarat
        adContent.innerHTML = `
            <div class="ad-iframe-container">
                <iframe src="https://www.effectivegatecpm.com/jmxtn13f4u?key=f0d62284f1985ef0201e08b24c1191f6" 
                        style="width:100%; height:250px; border:none; border-radius:10px;">
                </iframe>
            </div>
            <div class="button-group">
                <button id="next-level" class="game-button">N√∂vb…ôti S…ôviyy…ô</button>
                <button id="restart-level" class="game-button">Yenid…ôn Ba≈üla</button>
            </div>
        `;
        
        adContainer.classList.remove('hidden');
        
        // N√∂vb…ôti s…ôviyy…ô d√ºym…ôsi
        const nextLevelBtn = document.getElementById('next-level');
        if (nextLevelBtn) {
            nextLevelBtn.addEventListener('click', function() {
                level++;
                adContainer.classList.add('hidden');
                // Emoji d…ôstini d…ôyi≈üdir
                initGame();
            });
        }
        
        // Yenid…ôn ba≈ülat d√ºym…ôsi
        const restartLevelBtn = document.getElementById('restart-level');
        if (restartLevelBtn) {
            restartLevelBtn.addEventListener('click', function() {
                adContainer.classList.add('hidden');
                initGame();
            });
        }
    }

    // Uyƒüunluq yoxlamasƒ±
    function checkForMatch() {
        const isMatch = firstCard.dataset.emoji === secondCard.dataset.emoji;
        
        if (isMatch) {
            disableCards();
            matchedPairs++;
            matchedDisplay.textContent = `${matchedPairs}/${totalPairs}`;
            
            // B√ºt√ºn c√ºtl√ºkl…ôr tapƒ±ldƒ± mƒ±?
            if (matchedPairs === totalPairs) {
                setTimeout(() => {
                    showAd(); // Reklamƒ± g√∂st…ôr
                }, 500);
            }
        } else {
            unflipCards();
        }
    }

    // Uyƒüun g…ôl…ôn kartlarƒ± qeyd et
    function disableCards() {
        firstCard.classList.add('matched');
        secondCard.classList.add('matched');
        resetBoard();
    }

    // Uyƒüunluq yoxdursa kartlarƒ± geri √ßevir
    function unflipCards() {
        lockBoard = true;
        
        setTimeout(() => {
            firstCard.classList.remove('flipped');
            secondCard.classList.remove('flipped');
            resetBoard();
        }, 1000);
    }

    // Oyun taxtasƒ±nƒ± sƒ±fƒ±rla
    function resetBoard() {
        [hasFlippedCard, lockBoard] = [false, false];
        [firstCard, secondCard] = [null, null];

    // Yenid…ôn ba≈ülat d√ºym…ôsi
    restartButton.addEventListener('click', initGame);

    // Telegram-dan g…ôl…ôn istifad…ô√ßi m…ôlumatƒ±nƒ± yoxla
    const isTelegram = window.Telegram && window.Telegram.WebApp;
    let tg = null;
    let user = null;

    // Initialize Telegram WebApp if available
    if (isTelegram) {
        tg = window.Telegram.WebApp;
        user = tg.initDataUnsafe?.user;
        
        // Expand the app to full view
        tg.expand();
        
        // Show user info if available
        if (user) {
            const userInfo = document.getElementById('user-info');
            userInfo.innerHTML = `
                <p>Xo≈ü g…ôlmisiniz, ${user.first_name || 'ƒ∞stifad…ô√ßi'}!</p>
                <button id="start-game" class="game-button">Oyuna Ba≈üla</button>
            `;
            userInfo.classList.remove('hidden');
            
            document.getElementById('start-game').addEventListener('click', function() {
                userInfo.classList.add('hidden');
                document.getElementById('game-area').classList.remove('hidden');
                initGame();
            });
        } else {
            // If no user data in Telegram, show error
            document.getElementById('telegram-login').classList.remove('hidden');
        }
    } else {
        // For non-Telegram users, show the game directly
        document.getElementById('game-area').classList.remove('hidden');
        initGame();
        
        // Hide the Telegram login prompt if shown
        const telegramLogin = document.getElementById('telegram-login');
        if (telegramLogin) {
            telegramLogin.classList.add('hidden');
        }
    }

    // Web App-in hazƒ±r olduƒüunu Telegram-a bildir
    if (tg) {
        tg.ready();
    }
