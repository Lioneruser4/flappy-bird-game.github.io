		this.renderer.setSize(window.innerWidth, window.innerHeight);
		this.camera.left = window.innerWidth / - viewSize;
		this.camera.right = window.innerWidth / viewSize;
		this.camera.top = window.innerHeight / viewSize;
		this.camera.bottom = window.innerHeight / - viewSize;
		this.camera.updateProjectionMatrix();
	}
	
	render = function()
	{
		this.renderer.render(this.scene, this.camera);
	}

	add = function(elem)
	{
		this.scene.add(elem);
	}

	remove = function(elem)
	{
		this.scene.remove(elem);
	}
}

class Block
{
	const STATES = {ACTIVE: 'active', STOPPED: 'stopped', MISSED: 'missed'};
	const MOVE_AMOUNT = 12;

	dimension = { width: 0, height: 0, depth: 0}
	position = {x: 0, y: 0, z: 0};
	
	mesh:any;
	state:string;
	index:number;
	speed:number;
	direction:number;
